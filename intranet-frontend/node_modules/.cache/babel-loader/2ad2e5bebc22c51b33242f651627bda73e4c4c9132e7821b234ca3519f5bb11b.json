{"ast":null,"code":"var _jsxFileName = \"/Users/pouyasadri/Desktop/tp/intranet-frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      if (localStorage.token) {\n        setAuthToken(localStorage.token);\n        try {\n          const res = await axios.get('http://localhost:8000/api/auth/me');\n          setUser(res.data.data);\n          setIsAuthenticated(true);\n        } catch (err) {\n          localStorage.removeItem('token');\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      }\n      setIsLoading(false);\n    };\n    checkLoggedIn();\n  }, []);\n  const setAuthToken = token => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  };\n  const login = async (email, password) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('http://localhost:8000/api/auth/login', {\n        email,\n        password\n      }, config);\n      localStorage.setItem('token', res.data.token);\n      setAuthToken(res.data.token);\n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setAuthToken();\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const updateUserDetails = async userData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.put('http://localhost:8000/api/auth/updatedetails', userData, config);\n      setUser(res.data.data);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n  const updatePassword = async passwords => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      await axios.put('http://localhost:8000/api/auth/updatepassword', passwords, config);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isLoading,\n      login,\n      logout,\n      updateUserDetails,\n      updatePassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"v1LRzRO747hYRtRdhUIJv9BiM4M=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkLoggedIn","localStorage","token","setAuthToken","res","get","data","err","removeItem","defaults","headers","common","login","email","password","config","post","setItem","logout","updateUserDetails","userData","put","updatePassword","passwords","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pouyasadri/Desktop/tp/intranet-frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const checkLoggedIn = async () => {\n            if (localStorage.token) {\n                setAuthToken(localStorage.token);\n                try {\n                    const res = await axios.get('http://localhost:8000/api/auth/me');\n                    setUser(res.data.data);\n                    setIsAuthenticated(true);\n                } catch (err) {\n                    localStorage.removeItem('token');\n                    setUser(null);\n                    setIsAuthenticated(false);\n                }\n            }\n            setIsLoading(false);\n        };\n\n        checkLoggedIn();\n    }, []);\n\n    const setAuthToken = (token) => {\n        if (token) {\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        } else {\n            delete axios.defaults.headers.common['Authorization'];\n        }\n    };\n\n    const login = async (email, password) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        try {\n            const res = await axios.post(\n                'http://localhost:8000/api/auth/login',\n                { email, password },\n                config\n            );\n\n            localStorage.setItem('token', res.data.token);\n            setAuthToken(res.data.token);\n            setUser(res.data.user);\n            setIsAuthenticated(true);\n            return true;\n        } catch (err) {\n            return false;\n        }\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setAuthToken();\n        setUser(null);\n        setIsAuthenticated(false);\n    };\n\n    const updateUserDetails = async (userData) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        try {\n            const res = await axios.put(\n                'http://localhost:8000/api/auth/updatedetails',\n                userData,\n                config\n            );\n            setUser(res.data.data);\n            return true;\n        } catch (err) {\n            return false;\n        }\n    };\n\n    const updatePassword = async (passwords) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        try {\n            await axios.put(\n                'http://localhost:8000/api/auth/updatepassword',\n                passwords,\n                config\n            );\n            return true;\n        } catch (err) {\n            return false;\n        }\n    };\n\n    return (\n        <AuthContext.Provider\n            value={{\n                user,\n                isAuthenticated,\n                isLoading,\n                login,\n                logout,\n                updateUserDetails,\n                updatePassword,\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}